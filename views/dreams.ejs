<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>My Dreams - Dreamboard</title>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://fonts.googleapis.com/css2?family=Handlee&family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">

  <style>
    body {
      background: linear-gradient(135deg, #141E30, #243B55);
      color: #fff;
      font-family: 'Poppins', sans-serif;
      min-height: 100vh;
      margin: 0;
      display: flex;
      flex-direction: column;
    }

    nav.navbar {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(12px);
      border-bottom: 1px solid rgba(255, 255, 255, 0.15);
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 10px 25px;
      color: #FFD700;
      z-index: 1000;
    }

    .navbar h4 {
      margin: 0;
      font-weight: 700;
    }

    .nav-links {
      display: flex;
      gap: 20px;
    }

    .nav-item {
      color: #FFD700;
      font-size: 1.3rem;
      text-decoration: none;
      transition: 0.3s;
    }

    .nav-item:hover, .nav-item.active {
      color: #fff;
    }

    /* --- MOBILE NAV --- */
    @media (max-width: 768px) {
      nav.navbar {
        top: auto;
        bottom: 0;
        justify-content: space-around;
        border-top: 1px solid rgba(255, 255, 255, 0.15);
        border-bottom: none;
        padding: 10px 0;
      }
      .navbar h4 { display: none; }
      .nav-links {
        width: 100%;
        justify-content: space-around;
        gap: 0;
      }
      .nav-item { font-size: 1.5rem; }
    }

    .feed-container {
      flex: 1;
      padding: 90px 20px 80px;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    /* Sticky Note */
    .dream-card {
      background: #fff8b3;
      color: #222;
      font-family: 'Handlee', cursive;
      border-radius: 8px;
      border: 1px solid #e5d774;
      width: 100%;
      max-width: 550px;
      padding: 25px;
      margin-bottom: 25px;
      box-shadow: 0 6px 18px rgba(0, 0, 0, 0.3);
      position: relative;
      transform: rotate(-1deg);
      animation: fadeIn 0.5s ease;
    }

    .dream-card:nth-child(even) { transform: rotate(1.2deg); }

    .dream-card::before {
      content: "";
      position: absolute;
      top: -12px;
      left: 50%;
      transform: translateX(-50%);
      width: 20px;
      height: 20px;
      background: radial-gradient(circle at center, #c0392b 60%, #000 100%);
      border-radius: 50%;
    }

    .dream-card p {
      color: #333;
      font-size: 1.05rem;
      margin-bottom: 20px;
      white-space: pre-line;
    }

    /* Footer */
    .note-footer {
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-top: 1px dashed #ccc;
      padding-top: 10px;
      color: #444;
    }

    .note-footer .actions {
      display: flex;
      gap: 10px;
    }

    .action-btn {
      border: none;
      background: transparent;
      cursor: pointer;
      font-size: 1.2rem;
      transition: transform 0.2s;
    }

    .action-btn:hover {
      transform: scale(1.2);
    }

    .edit-btn { color: #2980b9; }
    .delete-btn { color: #e74c3c; }

    .add-dream-btn {
      position: fixed;
      bottom: 25px;
      right: 25px;
      background: #FFD700;
      color: #222;
      border: none;
      border-radius: 50%;
      width: 60px;
      height: 60px;
      font-size: 32px;
      font-weight: 700;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 4px 15px rgba(255, 215, 0, 0.4);
      cursor: pointer;
      transition: 0.3s;
      z-index: 1200;
    }

    .add-dream-btn:hover {
      background: #222;
      color: #FFD700;
      transform: scale(1.05);
    }

    @media (max-width: 480px) {
      .add-dream-btn {
        bottom: 80px;
        right: 20px;
        width: 50px;
        height: 50px;
        font-size: 26px;
      }
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .lined-note {
  background: repeating-linear-gradient(
    #fffde3,
    #fffde3 28px,
    #f5e59c 29px,
    #fffde3 30px
  );
  border: 1px dashed #e5d774;
  padding: 15px 20px;
  color: #333;
  font-family: 'Handlee', cursive;
  font-size: 1.05rem;
  line-height: 30px;
  border-radius: 8px;
  min-height: 150px;
  max-height: 250px;
  overflow-y: auto;
  outline: none;
  white-space: pre-wrap;
}

.lined-note:focus {
  box-shadow: 0 0 8px rgba(255, 215, 0, 0.7);
}

.dream-edit-popup {
  border-radius: 12px !important;
  font-family: 'Poppins', sans-serif;
}
  </style>
</head>
<body>

  <nav class="navbar">
    <h4>üåô My Dreams</h4>
    <div class="nav-links">
      <a href="/feed" class="nav-item">üè†</a>
      <a href="/dreams" class="nav-item active">üí≠</a>
      <a href="/notifications" class="nav-item">üîî</a>
      <a href="/profile" class="nav-item">üë§</a>
    </div>
  </nav>

  <div class="feed-container">
    <% if (dreams.length == 0) { %>
        <h4>No dreams found üò¥</h4>
    <% }else{ %>    
    <% dreams.forEach(dream => { %>
      <div class="dream-card" data-id="<%= dream.id %>">
        <p class="dream-text"><%= dream.dream %></p>

        <div class="note-footer">
          <small>üïí <%= dream.created_at %></small>
          <div class="actions">
            <button class="action-btn edit-btn">‚úèÔ∏è</button>
            <button class="action-btn delete-btn">üóëÔ∏è</button>
          </div>
        </div>
      </div>
    <% }) %>
    <% } %>
  </div>

  <button class="add-dream-btn" id="addDreamBtn">+</button>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
    // Redirect to add dream
    $('#addDreamBtn').on('click', () => window.location.href = '/add-dream');

    // üóëÔ∏è Delete dream
  $(document).on('click', '.delete-btn', function() {
  const $card = $(this).closest('.dream-card');
  const dreamId = $card.data('id');

  Swal.fire({
    title: "Delete this dream?",
    text: "This action cannot be undone.",
    icon: "warning",
    showCancelButton: true,
    confirmButtonColor: "#e74c3c",
    cancelButtonColor: "#3085d6",
    confirmButtonText: "Yes, delete it!",
    cancelButtonText: "Cancel"
  }).then((result) => {
    if (result.isConfirmed) {
      // ‚úÖ Send AJAX request to backend
      $.ajax({
        url: `/dream/delete/${dreamId}`,
        method: "DELETE",
        success: function(res) {
          if (res.success) {
            Swal.fire("Deleted!", "Your dream has been removed.", "success");
            $card.fadeOut(400, () => $card.remove());
          } else {
            Swal.fire("Error", res.message || "Something went wrong.", "error");
          }
        },
        error: function() {
          Swal.fire("Error", "Server error occurred.", "error");
        }
      });
    }
  });
});

    // ‚úèÔ∏è Edit dream
$(document).on('click', '.edit-btn', function() {
  const $card = $(this).closest('.dream-card');
  const dreamId = $card.data('id');
  const currentText = $card.find('.dream-text').text().trim();

  Swal.fire({
    title: "üìí Edit Your Dream",
    html: `
      <div id="linedNote" contenteditable="true" class="lined-note">${currentText}</div>
      <small id="charCount" style="display:block;margin-top:10px;color:#555;">
        ${currentText.length}/300
      </small>
    `,
    showCancelButton: true,
    confirmButtonText: "üíæ Save",
    cancelButtonText: "‚ùå Cancel",
    confirmButtonColor: "#f1c40f",
    cancelButtonColor: "#95a5a6",
    background: "#fff8b3",
    color: "#222",
    width: "90%",
    customClass: {
      popup: "dream-edit-popup"
    },
    didOpen: () => {
      const $note = $("#linedNote");
      const $counter = $("#charCount");

      $note.on("input", function() {
        const text = $(this).text();
        if (text.length > 300) {
          $(this).text(text.substring(0, 300)); // limit chars
          const range = document.createRange();
          range.selectNodeContents(this);
          range.collapse(false);
          const sel = window.getSelection();
          sel.removeAllRanges();
          sel.addRange(range);
        }
        $counter.text(`${$(this).text().length}/300`);
      });
    },
    preConfirm: () => {
      const text = $("#linedNote").text().trim();
      if (!text) {
        Swal.showValidationMessage("Dream cannot be empty!");
        return false;
      }
      return text;
    }
  }).then(result => {
    if (result.isConfirmed) {
      const updatedText = result.value;

      $.ajax({
        url: `/dream/edit/${dreamId}`,
        method: "PUT",
        contentType: "application/json",
        data: JSON.stringify({ dream: updatedText }),
        success: function(res) {
          if (res.success) {
            $card.find('.dream-text').text(updatedText);
            Swal.fire({
              icon: "success",
              title: "‚ú® Dream updated!",
              showConfirmButton: false,
              timer: 1200,
              background: "#fff8b3",
              color: "#222"
            });
          } else {
            Swal.fire("Error", res.message || "Something went wrong.", "error");
          }
        },
        error: function() {
          Swal.fire("Error", "Server error occurred.", "error");
        }
      });
    }
  });
});
  </script>
</body>
</html>
